{"version":3,"sources":["script.js"],"names":["dropboxContainer","document","querySelector","dropbox","play","pause","reset","btnBrowse","inputFile","dropboxText","sliderContainer","slidesContainer","slides","querySelectorAll","instructionContainer","images","validExtension","addEventListener","e","preventDefault","classList","add","textContent","style","pointerEvents","remove","isAllExtensionValid","Array","from","dataTransfer","files","i","length","loadImage","resetImages","click","slideshowInterval","intervalTime","isAllExtValid","every","img","includes","type","alert","image","imgContainer","createElement","fileReader","FileReader","onload","setAttribute","result","appendChild","readAsDataURL","nextSlide","currentSlide","nextElementSibling","display","setInterval","clearInterval","location","reload"],"mappings":"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","file":"script.698d3446.js","sourceRoot":"..\\src","sourcesContent":["const dropboxContainer = document.querySelector(\".container-dropbox\");\r\nconst dropbox = document.querySelector(\".dropbox\");\r\nconst play = document.querySelector(\".fa-play\");\r\nconst pause = document.querySelector(\".fa-pause\");\r\nconst reset = document.querySelector(\".fa-trash-alt\");\r\nconst btnBrowse = document.querySelector(\".dropbox__btn-browse\");\r\nconst inputFile = document.querySelector(\".dropbox__file-loader\");\r\nconst dropboxText = document.querySelector(\".dropbox p\");\r\nconst sliderContainer = document.querySelector(\".container-slider\");\r\nconst slidesContainer = document.querySelector(\".slides\");\r\nlet slides = document.querySelectorAll(\"slide\");\r\nconst instructionContainer = document.querySelector(\".container-instruction\");\r\n\r\nlet images = [];\r\nconst validExtension = [\"image/png\", \"image/jpeg\", \"image/jpg\"];\r\n\r\n// Add event listener for dragOver\r\ndropbox.addEventListener(\"dragover\", (e) => {\r\n  e.preventDefault();\r\n  dropbox.classList.add(\"active\");\r\n  dropboxText.textContent = \"Release to upload the image.\";\r\n  btnBrowse.style.pointerEvents = \"none\";\r\n});\r\n\r\n// Add event listener for dragLeave\r\ndropbox.addEventListener(\"dragleave\", () => {\r\n  dropbox.classList.remove(\"active\");\r\n  dropboxText.textContent = \"Drag & Drop Image Files to Upload.\";\r\n  btnBrowse.style.pointerEvents = \"auto\";\r\n});\r\n\r\n// Add event listener for drop\r\ndropbox.addEventListener(\"drop\", (e) => {\r\n  e.preventDefault();\r\n\r\n  images = Array.from(e.dataTransfer.files);\r\n  if (isAllExtensionValid(images)) {\r\n    images = e.dataTransfer.files;\r\n\r\n    dropbox.classList.remove(\"active\");\r\n    dropboxText.textContent = \"Click play button to start or add more images.\";\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      loadImage(images[i]);\r\n    }\r\n\r\n    slides = document.querySelectorAll(\".slide\");\r\n    slides[0].classList.add(\"visible\");\r\n  } else {\r\n    resetImages(images);\r\n  }\r\n  btnBrowse.style.pointerEvents = \"auto\";\r\n});\r\n\r\n// Open up file input when Browse File button is clicked.\r\nbtnBrowse.addEventListener(\"click\", () => {\r\n  inputFile.click();\r\n});\r\n\r\n// Add event listener file input\r\ninputFile.addEventListener(\"change\", () => {\r\n  images = Array.from(inputFile.files);\r\n\r\n  if (isAllExtensionValid(images)) {\r\n    images = inputFile.files;\r\n\r\n    for (let i = 0; i < images.length; i++) {\r\n      loadImage(images[i]);\r\n    }\r\n\r\n    slides = document.querySelectorAll(\".slide\");\r\n    slides[0].classList.add(\"visible\");\r\n\r\n    dropboxText.textContent = \"Click play button to start or add more images.\";\r\n  } else {\r\n    resetImages(images);\r\n  }\r\n});\r\n\r\n// Start slide show when play icon is clicked.\r\nconst intervalTime = 5000;\r\nlet slideshowInterval;\r\n\r\nplay.addEventListener(\"click\", () => {\r\n  if (slides.length === 0) {\r\n    alert(\"Please upload images first.\");\r\n    return;\r\n  }\r\n\r\n  // Hide container-dropbox\r\n  dropboxContainer.style.display = \"none\";\r\n  sliderContainer.style.display = \"block\";\r\n  instructionContainer.style.display = \"none\";\r\n\r\n  play.classList.add(\"active\");\r\n  pause.classList.remove(\"active\");\r\n\r\n  // Slide images\r\n  slideshowInterval = setInterval(nextSlide, intervalTime);\r\n});\r\n\r\n// Pause slide show when pause icon is clicked.\r\npause.addEventListener(\"click\", () => {\r\n  if (slides.length === 0) {\r\n    alert(\"Please upload images first.\");\r\n    return;\r\n  }\r\n\r\n  play.classList.remove(\"active\");\r\n  pause.classList.add(\"active\");\r\n\r\n  clearInterval(slideshowInterval);\r\n});\r\n\r\n// Resetting when trashcan icocn is clicked.\r\nreset.addEventListener(\"click\", () => {\r\n  location.reload();\r\n});\r\n\r\n// Function to verify image extensions.\r\nfunction isAllExtensionValid(images) {\r\n  const isAllExtValid = images.every((img) => {\r\n    return validExtension.includes(img.type);\r\n  });\r\n\r\n  return isAllExtValid;\r\n}\r\n\r\nfunction resetImages(images) {\r\n  alert(\"Please upload images with .png, .jpeg, or .jpg extension.\");\r\n  dropbox.classList.remove(\"active\");\r\n  dropboxText.textContent = \"Drag & Drop Image Files to Upload.\";\r\n  images.length = 0;\r\n}\r\n\r\n// Function to loadimages.\r\nfunction loadImage(image) {\r\n  const imgContainer = document.createElement(\"div\");\r\n  imgContainer.classList.add(\"slide\");\r\n\r\n  const fileReader = new FileReader();\r\n  fileReader.onload = () => {\r\n    imgContainer.setAttribute(\r\n      \"style\",\r\n      `background: url(${fileReader.result}) no-repeat center/cover;`\r\n    );\r\n  };\r\n  slidesContainer.appendChild(imgContainer);\r\n\r\n  fileReader.readAsDataURL(image);\r\n}\r\n\r\n// Function to initiate slide show\r\nfunction nextSlide() {\r\n  const currentSlide = document.querySelector(\".visible\");\r\n\r\n  currentSlide.classList.remove(\"visible\");\r\n\r\n  if (currentSlide.nextElementSibling) {\r\n    currentSlide.nextElementSibling.classList.add(\"visible\");\r\n  } else {\r\n    slides[0].classList.add(\"visible\");\r\n  }\r\n}\r\n"]}